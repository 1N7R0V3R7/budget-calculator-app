{"ast":null,"code":"import { ExpenseCatalogue } from './ExpenseCatalogue.model';\nimport { HeaderComponent } from './header/header.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./header/header.component\";\nimport * as i2 from \"./input-form/input-form.component\";\nimport * as i3 from \"./expense-table/expense-table.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.title = 'budget-calculator-app'; // Main list of expenses\n\n      this.expenseCatalogue = []; // Code to enable local storage\n\n      this.localItem = localStorage.getItem(\"expenses\");\n\n      if (this.localItem === null) {\n        this.expenseCatalogue = [];\n      } else {\n        let tempCatalogue = JSON.parse(this.localItem); //Converting the local storage object array to expense catalogue object array\n\n        this.expenseCatalogue = tempCatalogue.map(item => new ExpenseCatalogue(item.type, item.expenseAmount, item.expenseDescription));\n      }\n\n      this.updateTotalExpense();\n    }\n\n    updateTotalExpense() {\n      let temp = setTimeout(() => {\n        this.child.updatedExpenses(this.expenseCatalogue);\n      }, 100);\n    } // Input froming from input-form component to add tomain expense list\n\n\n    addToExpensesList(newExpense) {\n      console.log(\"Added to the main expense list\");\n      this.expenseCatalogue.push(new ExpenseCatalogue(newExpense.expenseAmount > 0 ? 'income' : 'expense', newExpense.expenseAmount, newExpense.expenseDescription));\n      this.updateHeaderAndLocal();\n      console.log(this.expenseCatalogue);\n    }\n\n    removeExpense(event) {\n      console.log(\"Removing from the main expense list\");\n      let index = this.expenseCatalogue.find(expenseItem => expenseItem.expenseAmount === event.removeAmount && expenseItem.expenseDescription === event.removeDescription);\n      this.expenseCatalogue = this.expenseCatalogue.filter(expenseItem => expenseItem !== index);\n      console.log(\"Element removed from the main list, updated list is as follows\");\n      console.log(this.expenseCatalogue);\n      this.updateHeaderAndLocal();\n    }\n\n    updateExpense(event) {\n      console.log(\"Updating to the main list\");\n      let index = this.expenseCatalogue.indexOf(event.updateIndex);\n      this.addToExpensesList({\n        expenseAmount: event.updateAmount,\n        expenseDescription: event.updateDescription\n      });\n      this.removeExpense({\n        removeAmount: this.expenseCatalogue[index].expenseAmount,\n        removeDescription: this.expenseCatalogue[index].expenseDescription\n      });\n    }\n\n    clearExpense() {\n      this.expenseCatalogue = [];\n      this.updateHeaderAndLocal();\n    }\n\n    updateHeaderAndLocal() {\n      this.child.updatedExpenses(this.expenseCatalogue);\n      localStorage.setItem(\"expenses\", JSON.stringify(this.expenseCatalogue));\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(HeaderComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.child = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 1,\n    consts: [[3, \"expensesAdded\"], [3, \"updatedExpenseCatalogue\", \"expensesRemoved\", \"expensesUpdated\"], [1, \"grid\", \"grid-cols-5\", \"my-8\"], [1, \"btn-remove\", \"col-start-3\", \"text-base\", \"px-4\", \"py-2\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"app-input-form\", 0);\n        i0.ɵɵlistener(\"expensesAdded\", function AppComponent_Template_app_input_form_expensesAdded_1_listener($event) {\n          return ctx.addToExpensesList($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"app-expense-table\", 1);\n        i0.ɵɵlistener(\"expensesRemoved\", function AppComponent_Template_app_expense_table_expensesRemoved_2_listener($event) {\n          return ctx.removeExpense($event);\n        })(\"expensesUpdated\", function AppComponent_Template_app_expense_table_expensesUpdated_2_listener($event) {\n          return ctx.updateExpense($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_4_listener() {\n          return ctx.clearExpense();\n        });\n        i0.ɵɵtext(5, \"Clear All\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"updatedExpenseCatalogue\", ctx.expenseCatalogue);\n      }\n    },\n    directives: [i1.HeaderComponent, i2.InputFormComponent, i3.ExpenseTableComponent],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}